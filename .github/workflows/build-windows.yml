name: Build Amazon Japan Scraper v4.0

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-ultimate:
    runs-on: windows-2022
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Test imports for ultimate version
      run: |
        python -c "import tkinter; import requests; import bs4; import pandas; import openpyxl; print('All imports successful for v4.0')"
        
    - name: Test ultimate version
      run: |
        python -c "from main_ultimate import UltimateAmazonScraper, UltimateScraperGUI; print('Ultimate version imports successful')"
        
    - name: Build ultimate executable
      run: |
        python build_ultimate.py
        
    - name: Debug - List dist directory
      run: |
        Write-Host "Contents of dist directory:"
        Get-ChildItem -Path "dist" -Force | Format-Table Name, Length, LastWriteTime
        
    - name: Verify build results
      run: |
        # The build script should have created the release_ultimate directory
        if (Test-Path "release_ultimate") {
          Write-Host "✅ Release directory created by build script"
          Write-Host "📁 Contents of release_ultimate:"
          Get-ChildItem -Path "release_ultimate" | Format-Table Name, Length, LastWriteTime
          
          # Check for the expected executable
          $exePath = "release_ultimate\Amazon_Japan_Scraper_v4.0_Ultimate.exe"
          if (Test-Path $exePath) {
            Write-Host "✅ Windows executable found: $exePath"
            $fileInfo = Get-Item $exePath
            Write-Host "📊 File size: $([math]::Round($fileInfo.Length / 1MB, 1)) MB"
          } else {
            Write-Host "❌ Expected executable not found in release directory"
            exit 1
          }
        } else {
          Write-Host "❌ Release directory not created by build script"
          exit 1
        }
        
    - name: Create README for release
      run: |
        $readmeContent = @"
        # Amazon Japan Scraper v4.0 - 终极版

        ## 🚀 v4.0 终极版特性
        - 🔍 扩大关键词搜索范围，支持更多小商品
        - ♾️ 无限制连续搜索，想搜多久搜多久
        - 💾 实时保存功能，一边搜索一边保存数据
        - 🧠 四层智能卖家信息提取算法
        - 🖥️ 支持后台运行，可以离开桌面

        ## 🚀 使用方法
        1. 双击运行程序
        2. 输入搜索关键词（如：电脑、笔记本、手机）
        3. 设置页数和产品数量
        4. 点击开始搜索

        ## ⚙️ 推荐配置
        - 小规模测试：20页，100产品
        - 中等规模：50页，500产品  
        - 大规模：100页，2000产品

        ## 🛡️ 稳定性保证
        - 分批处理，每批20个产品
        - 内存自动清理，不会溢出
        - 错误自动恢复，单个失败不影响整体

        版本: 4.0.0 - 终极版
        "@
        $readmeContent | Out-File -FilePath "release_ultimate\README.txt" -Encoding UTF8
        
    - name: Final verification
      run: |
        if (Test-Path "release_ultimate/Amazon_Japan_Scraper_v4.0_Ultimate.exe") {
          Write-Host "🎉 Ultimate v4.0 build completed successfully!"
          $size = (Get-Item "release_ultimate/Amazon_Japan_Scraper_v4.0_Ultimate.exe").Length / 1MB
          Write-Host "📊 Final file size: $([math]::Round($size, 1)) MB"
          Write-Host "✅ Ready for distribution"
        } else {
          Write-Host "❌ Final verification failed - executable not found"
          exit 1
        }
        
    - name: Upload ultimate build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Amazon-Japan-Scraper-v4.0-Ultimate
        path: release_ultimate/
        retention-days: 30
        
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release_ultimate/Amazon_Japan_Scraper_v4.0_Ultimate.exe
          release_ultimate/README.txt
        body: |
          ## 🚀 Amazon Japan 卖家信息提取工具 v4.0 - 终极版
          
          ### 🎉 v4.0 终极版 - 革命性升级
          - 🔍 **扩大关键词搜索** - 支持更多小商品类别搜索
          - ♾️ **无限制连续搜索** - 想搜多久搜多久，不设上限
          - 💾 **实时保存功能** - 一边搜索一边保存，防止数据丢失
          - 🧠 **四层智能提取** - 卖家信息提取准确率大幅提升
          - 🖥️ **后台运行支持** - 可以离开桌面，程序继续工作
          - 🌏 **中文列名支持** - Excel表格显示中文列名
          
          ### 🆚 版本对比
          | 功能 | v3.1 | v4.0 | 改进 |
          |------|------|------|------|
          | 搜索限制 | 有页数限制 | 无限制搜索 | **突破限制** |
          | 保存方式 | 搜索完才保存 | 实时保存 | **防丢失** |
          | 关键词覆盖 | 部分商品 | 全品类支持 | **全覆盖** |
          | 卖家提取 | 三层算法 | 四层智能算法 | **更准确** |
          | 后台运行 | 不支持 | 完全支持 | **更灵活** |
          
          ### 📦 下载说明
          - 下载 `Amazon_Japan_Scraper_v4.0_Ultimate.exe` 文件
          - 双击运行即可使用，无需安装
          - 支持 Windows 10 及以上版本
          
          ### 🚀 使用方法
          1. 启动程序
          2. 输入任意商品关键词（如：手机壳、数据线、小商品）
          3. 点击"开始无限搜索"
          4. 程序自动搜索并实时保存
          5. 可随时停止，数据已保存
          6. 支持后台运行，可离开桌面
          
          ### 🎯 核心特性
          - **无限搜索**: 不设页数和产品数限制
          - **实时保存**: 每50个产品自动保存一次
          - **智能去重**: 自动过滤重复产品和卖家
          - **四层提取**: 关键词+结构+正则+深度分析
          - **全品类支持**: 从大件到小商品全覆盖
          
          ### 🛡️ 稳定性保证
          - 智能延迟控制，避免被封
          - 并发处理优化，提高效率
          - 内存自动管理，长期稳定运行
          - 错误自动恢复，单个失败不影响整体
          
          ### 📊 提取字段
          **产品信息**: 标题、价格、评分、链接等
          **卖家信息**: 公司名、电话、地址、代表姓名、店铺名、邮箱、传真
          
          ### ⚠️ 注意事项
          - 请合理使用，遵守网站使用条款
          - 数据仅供学习和研究使用
          - 建议在网络稳定时使用
          
          **🎊 终极版来了！无限搜索，实时保存，智能提取，后台运行！**
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
